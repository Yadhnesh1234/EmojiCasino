{"ast":null,"code":"var _jsxFileName = \"/home/yadhnesh/React App/emoji game/EmojiApp/src/components/Body.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Instructionpan from './Instructionpan';\nimport Emojidata from './Emojidata';\nimport Emgcard from './Emgcard';\nimport Gameplay from './Gameplay'; //import Displayresult from './Displayresult'\n\nimport Gamealgo from './Gamealgo';\nimport './Body.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet boundaryObj = {\n  position: \"absolute\",\n  border: \"4px solid rgb(13 5 5 / 90%)\",\n  zIndex: \"12\",\n  height: \"60px\",\n  marginTop: \"164px\",\n  width: \"441px\" //backgroundColor:\"rgba(241, 34, 34)\",\n  //boxShadow:\"2px 2px 29px black inset\"\n\n};\n\nconst Body = props => {\n  _s();\n\n  const [val1, setVal] = useState(-1);\n  const [cng, setCng] = useState(false);\n  const [start, setStart] = useState(false);\n  const [result, setResult] = useState(0);\n\n  const checkOpen = () => {\n    document.getElementById('openBar').style.width = \"10px\";\n  };\n\n  const cngState = () => {\n    if (val1 === -1) alert(\"Please select any emoji... ;) \");else if (cng === false) {\n      setCng(true);\n    } else {\n      setStart(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Body\",\n      children: [/*#__PURE__*/_jsxDEV(Instructionpan, {\n        Iindex: val1,\n        Icng: cng,\n        nameOfPlayer: props.playerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"innerBody\",\n        children: cng === false ? Emojidata.map((val, index) => {\n          const setIndex = () => {\n            setVal(index);\n          };\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"EmgCard\",\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              color: \"white\"\n            },\n            onClick: setIndex,\n            children: /*#__PURE__*/_jsxDEV(Emgcard, {\n              Emoji: val,\n              Eindex: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 1\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Gameplay, {\n            gameStart: start,\n            styleFun: checkOpen,\n            finalRes: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: boundaryObj,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"openBar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Gamealgo, {\n              startGame: start,\n              selectedEmoji: val1,\n              resFun: setResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"btnContainer\",\n        onClick: cngState,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"white\"\n          },\n          children: cng === 0 ? \"Next\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Body, \"Sb3o+TFzorpau3dS75fo/oexRuo=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/home/yadhnesh/React App/emoji game/EmojiApp/src/components/Body.js"],"names":["useState","Instructionpan","Emojidata","Emgcard","Gameplay","Gamealgo","boundaryObj","position","border","zIndex","height","marginTop","width","Body","props","val1","setVal","cng","setCng","start","setStart","result","setResult","checkOpen","document","getElementById","style","cngState","alert","playerName","map","val","index","setIndex","display","flexDirection","color"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport Instructionpan from './Instructionpan'\nimport Emojidata from './Emojidata'\nimport Emgcard from './Emgcard'\nimport Gameplay from './Gameplay'\n//import Displayresult from './Displayresult'\nimport Gamealgo from './Gamealgo'\nimport './Body.css'\nlet boundaryObj={\n    position:\"absolute\",\n    border:\"4px solid rgb(13 5 5 / 90%)\",\n    zIndex:\"12\",\n    height: \"60px\",\n    marginTop: \"164px\",\n    width:\"441px\"\n    //backgroundColor:\"rgba(241, 34, 34)\",\n    //boxShadow:\"2px 2px 29px black inset\"\n  }\nconst Body=(props)=>{\nconst [val1,setVal]=useState(-1);\nconst [cng,setCng]=useState(false);\nconst [start,setStart]=useState(false);\nconst [result,setResult]=useState(0);\nconst checkOpen=()=>{\n    document.getElementById('openBar').style.width=\"10px\"\n}\nconst cngState=()=>{\n    if(val1===-1)\n    alert(\"Please select any emoji... ;) \");\n    else if(cng===false){\n    setCng(true);\n    }\n    else{\n    setStart(true);\n    }\n}\n\nreturn(\n    <>\n<div id=\"Body\">\n<Instructionpan\nIindex={val1}\nIcng={cng}\nnameOfPlayer={props.playerName}\n/>\n\n<div id=\"innerBody\">\n{cng===false?Emojidata.map((val,index)=>{\nconst setIndex=()=>{\n    setVal(index);\n}\nreturn(\n<div id=\"EmgCard\" style={{display:\"flex\",flexDirection:\"column\",color:\"white\"}} onClick={setIndex}>\n    <Emgcard\n    Emoji={val}\n    Eindex={index}\n    />\n</div>\n    )\n\n}):\n<>\n<Gameplay gameStart={start}  styleFun={checkOpen} finalRes={result}/>\n<div style={boundaryObj}>\n<div id=\"openBar\">\n</div>\n<Gamealgo startGame={start} selectedEmoji={val1} resFun={setResult} />\n</div>\n</>\n}\n</div>\n<div id=\"btnContainer\" onClick={cngState}>\n<h2 style={{color:\"white\"}}>{cng===0?\"Next\":\"Start\"}</h2>\n</div>\n</div>\n</>\n)\n}\nexport default Body"]},"metadata":{},"sourceType":"module"}